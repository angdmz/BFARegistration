"""empty message

Revision ID: bebb8d387d4d
Revises: 051a5b80d7c6
Create Date: 2023-04-07 23:31:12.415166

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bebb8d387d4d'
down_revision = '051a5b80d7c6'
branch_labels = None
depends_on = None

enum_account_controller_status = sa.Enum('VERIFIED', 'UNVERIFIED', 'TO_REVERIFIED', name='enum_account_controller_status')
def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('balance_limits',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ethereum_accounts',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('public_key', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_controllers',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('address_id', sa.UUID(), nullable=True),
    sa.Column('participant_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['ethereum_accounts.id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['natural_persons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address_id', 'participant_id', name='address_id_participant_id_uc')
    )
    op.create_table('account_controllers_status',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('status', enum_account_controller_status, nullable=True),
    sa.Column('account_controller_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['account_controller_id'], ['account_controllers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_controller_id', 'status', 'created_at', name='account_controller_id_status_created_at_uc')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('account_controllers_status')
    op.drop_table('account_controllers')
    op.drop_table('ethereum_accounts')
    op.drop_table('balance_limits')
    op.execute(f'DROP TYPE {enum_account_controller_status.name}')
    # ### end Alembic commands ###
